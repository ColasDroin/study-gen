# ==================================================================================================
# --- Structure of the study ---
# ==================================================================================================
name: study_hllhc16
structure:
  layer_1:
    generations:
      - prepare_particles_distribution
      - build_base_collider
  layer_2:
    generations:
      - configure_collider
    scans:
      qx:
        linspace: [62.31, 62.32, 2]
        for_each_beam: true
      qy:
        list: [60.32, 60.33]
        for_each_beam: true
  layer_3:
    generations:
      - track_particles
    # scans:
    #   n_turns:
    #     list: [1000, 2000]

# ==================================================================================================
# --- Base collider generation ---
# ==================================================================================================
build_base_collider:
  script:
    prepare_mad_environment:
      args: links
      output: sequence_name_b1, sequence_name_b2, mad_b1b2, sequence_name_b4, mad_b4
    build_hllhc_sequence:
      args: sequence_name_b1, mad_b1b2, apply_acsca_fix, cycle_to_IP3, incorporate_CC
      output: mad_b1b2
    build_hllhc_sequence__2:
      args: sequence_name_b4, mad_b4, apply_acsca_fix, cycle_to_IP3, incorporate_CC
      output: mad_b4
    apply_optics:
      args: mad_b1b2, optics_file
      output: mad_b1b2
    check_madx_lattice:
      args: mad_b1b2, sequence_name_b1
      output:
    check_madx_lattice__2:
      args: mad_b1b2, sequence_name_b2
      output:
    apply_optics__2:
      args: mad_b4, optics_file
      output: mad_b4
    check_madx_lattice__3:
      args: mad_b4, sequence_name_b2
      output:
    build_collider:
      args: mad_b1b2, mad_b4, beam_config, enable_imperfections, enable_knob_synthesis, rename_coupling_knobs, pars_for_imperfections, ver_hllhc_optics
      output: collider
    build_trackers:
      args: collider
      output: collider
    check_xsuite_twiss:
      args: collider
      output:
    activate_RF:
      args: collider
      output: collider
    display_xsuite_lattice:
      args: collider
      output:
    clean_temp_files:
      args:
      output:
    dump_collider_json:
      args: collider, path_base_collider
      output:

# ==================================================================================================
# --- Tailor collider with xsuite generation ---
# ==================================================================================================
configure_collider:
  script:
    load_collider_json:
      args: path_base_collider
      output: collider
    generate_orbit_correction_setup:
      args:
      output: correction_setup
    dump_orbit_correction_files:
      args: correction_setup
      output: path_correction_setup
    install_beam_beam:
      args: collider, num_long_range_encounters_per_side, num_slices_head_on, bunch_spacing_buckets, sigma_z
      output: collider
    build_trackers:
      args: collider
      output: collider
    set_knobs:
      args: collider, knob_settings
      output: collider
    match_tune_and_chroma:
      args: collider, knob_names, qx, qy, dqx, dqy, closed_orbit_correction
      output: collider
    load_filling_scheme:
      args: pattern_fname
      output: array_b1, array_b2
    compute_collision_schedule:
      args: array_b1, array_b2
      output: n_collisions_ip1_and_5, n_collisions_ip2, n_collisions_ip8
    get_CC_bool:
      args: on_crab1, on_crab5
      output: crab_bool
    luminosity_levelling_ip1_5:
      args: collider, n_collisions_ip1_and_5, nemitt_x, nemitt_y, sigma_z, crab_bool, max_PU_ip1_5, max_luminosity_ip1_5, max_intensity_ip1_5, target_luminosity_ip1_5
      output: luminosity_ip1_and_5_after_optimization_before_bb
    # compute_constraints_ip8:
    #   args: l_contraints_ip8
    #   output: xsuite_constraints_ip8
    luminosity_levelling_ip2_8:
      args: collider, config_lumi_leveling_ip2_8, num_particles_per_bunch, sigma_z, nemitt_x, nemitt_y, n_collisions_ip8 #, xsuite_constraints_ip8
      output: collider
    add_linear_coupling_hllhc:
      args: collider, delta_cmr
      output: collider
    match_tune_and_chroma__2:
      args: collider, knob_names, qx, qy, dqx, dqy, closed_orbit_correction
      output: collider
    assert_tune_chroma_coupling:
      args: collider, qx, qy, dqx, dqy, delta_cmr
      output:
    configure_beam_beam_interactions:
      args: collider, num_particles_per_bunch, nemitt_x, nemitt_y
      output: collider
    apply_filling_scheme:
      args: collider, array_b1, array_b2, i_bunch_b1, i_bunch_b2
      output: collider
    record_final_luminosity_and_PU:
      args: collider, num_particles_per_bunch, nemitt_x, nemitt_y, sigma_z, crab_bool, n_collisions_ip1_and_5, n_collisions_ip2, n_collisions_ip8
      output: lumi_ip1, lumi_ip2, lumi_ip5, lumi_ip8, PU_ip1, PU_ip2, PU_ip5, PU_ip8
    dump_collider_json:
      args: collider, path_configured_collider
      output:

# ==================================================================================================
# --- Particles distribution generation ---
# ==================================================================================================
prepare_particles_distribution:
  script:
    build_particles_distribution:
      args: [r_min, r_max, n_r, n_angles, n_split]
      output: particle_list
    write_particles_distribution:
      args: particle_list
      output:

# ==================================================================================================
# --- Simulation and tracking generation ---
# ==================================================================================================
track_particles:
  script:
    get_context:
      args: context_str
      output: context
    load_collider_json:
      args: path_configured_collider
      output: collider
    build_trackers:
      args: collider, context
      output: collider
    prepare_distribution_for_tracking:
      args: collider, context, beam_sequence, path_input_distribution, delta_max, nemitt_x, nemitt_y
      output: particles, particles_id
    track:
      args: collider, particles, beam_sequence, n_turns, save_input_particles, optimize_for_tracking, path_input_particles
      output: particles
    dump_tracked_particles:
      args: particles, particles_id, path_output_particles
      output:
    clean_after_tracking:
      args:
      output:

  template_name: with_context.txt
